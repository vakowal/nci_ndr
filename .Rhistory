rpm_full_df <- read.csv("C:/Users/ginge/Documents/NatCap/GIS_local/Kenya/RPM_via_NDVI_OPC/fitted_through_2015/RPM_outputs_transect_locations.csv")
rpm_df_merge <- merge(rpm_full_df, transect_date_corr_df)
rpm_df <- rpm_df_merge[, c("transect", "animal_density", "standing_biomass")]  # get 1 date per transect
write.csv(rpm_df, "C:/Users/ginge/Documents/NatCap/GIS_local/Kenya/RPM_via_NDVI_OPC/fitted_through_2015/RPM_outputs_transect_locations_and_dates.csv")
# summarize grazer dung, 10.12.20
comb_df <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Forage_model/Kenya_ticks_project_specific/OPC_dung_analysis/dung_summary.csv")
bovid_avg <- mean(comb_df$bovid)  # property-level bovid dung per transect
cattle_per_ha <- 0.1526  # property-level cattle density, from property master file
conversion_rate <- cattle_per_ha / bovid_avg
group_key <- "C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Forage_model/Kenya_ticks_project_specific/wildlife_group_definition.csv"
gr_key_df <- read.csv(group_key)
grazers <- gr_key_df[gr_key_df$Herbivory == 'grazer', c('Abbrev', 'Unit_weight_kg')]
grazers$body_weight <- as.numeric(grazers$Unit_weight_kg)
grazers$AUE <- 0
for (r in (1:NROW(grazers))) {
grazers[r, 'AUE'] <- (grazers[r, 'body_weight']**0.75) / (207**0.75) # (453.6**0.75)
}
transect_count_t <- as.data.frame(t(comb_df[2:24]))
colnames(transect_count_t) <- comb_df$transect
transect_count_t$Abbrev <- rownames(transect_count_t)
transect_merge <- merge(transect_count_t, grazers, by='Abbrev')  # get spp with AUE only
transect_t_restr <- transect_merge[, colnames(
transect_count_t)[colnames(transect_count_t) != 'Abbrev']]
grazers_AUE <- transect_merge[, 'AUE']
multiply_by_AUE <- function(x) x * grazers_AUE
transect_AUE <- data.frame(lapply(transect_t_restr, multiply_by_AUE))
transect_AUE_sum_df <- data.frame('transect'=comb_df$transect, 'grazer_AUE_sum'=colSums(transect_AUE))
transect_AUE_animals_per_ha <- data.frame(
'transect'=comb_df$transect, 'grazer_AUE_per_ha'=transect_AUE_sum_df$grazer_AUE_sum * conversion_rate)
mean(transect_AUE_animals_per_ha$grazer_AUE_per_ha)
# compare animal density from dung with density estimated by RPM
emp_grazers_per_ha <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Forage_model/Kenya_ticks_project_specific/OPC_dung_analysis/grazer_AUE_per_ha.csv")
write.csv(transect_AUE_animals_per_ha, "C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Forage_model/Kenya_ticks_project_specific/OPC_dung_analysis/grazer_AUE_per_ha.csv")
# compare animal density from dung with density estimated by RPM
emp_grazers_per_ha <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Forage_model/Kenya_ticks_project_specific/OPC_dung_analysis/grazer_AUE_per_ha.csv")
# compare animal density from dung with density estimated by RPM
emp_grazers_per_ha <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Forage_model/Kenya_ticks_project_specific/OPC_dung_analysis/grazer_AUE_per_ha.csv")
rpm_df <- read.csv("C:/Users/ginge/Documents/NatCap/GIS_local/Kenya/RPM_via_NDVI_OPC/fitted_through_2015/RPM_outputs_transect_locations_and_dates.csv")
head(rpm_df)
head(emp_grazers_per_ha)
animal_df <- merge(emp_grazers_per_ha, rpm_df)
library(ggplot2)
p <- ggplot(animal_df, aes(x=animal_density, y=grazer_AUE_per_ha))
p <- p + geom_point()
print(p)
# RPM outputs at transect locations
rpm_full_df <- read.csv("C:/Users/ginge/Documents/NatCap/GIS_local/Kenya/RPM_via_NDVI_OPC/fitted_through_2015/RPM_outputs_transect_locations.csv")
# split transects by month to extract RPM outputs
comb_df <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Forage_model/Kenya_ticks_project_specific/OPC_dung_analysis/dung_summary.csv")
date_df <- comb_df[, c('transect', 'Date')]
for (r in (1:NROW(date_df))){
a_list <- unlist(strsplit(date_df[r, "Date"], split="-"))
date_df[r, 'day'] <- as.numeric(a_list[1])
date_df[r, 'month_str'] <- a_list[2]
date_df[r, 'year'] <- as.numeric(paste('20', a_list[3], sep=''))
}
date_df[date_df$month_str == 'Feb', 'month'] <- 2
date_df[date_df$month_str == 'Mar', 'month'] <- 3
date_df[date_df$month_str == 'Apr', 'month'] <- 4
date_df[date_df$month_str == 'May', 'month'] <- 5
date_df[date_df$month_str == 'Jun', 'month'] <- 6
date_df[date_df$month_str == 'Sep', 'month'] <- 9
date_df[date_df$month_str == 'Nov', 'month'] <- 11
date_df[date_df$month_str == 'Dec', 'month'] <- 12
date_df$month_corr <- date_df$month
date_df[date_df$day < 15, 'month_corr'] <- (date_df[date_df$day < 15, 'month'] - 1)
transect_date_corr_df <- data.frame('transect'=comb_df$transect,
'Lat'=comb_df$Lat, 'Long'=comb_df$Long,
'year_month'=paste(date_df$year, date_df$month_corr, sep='_'))
rpm_df_merge <- merge(rpm_full_df, transect_date_corr_df)
colnames(rpm_df_merge)
rpm_df <- rpm_df_merge[, c("transect", "animal_density", "standing_biomass", "year_month")]  # restrict to correct date for each transect
write.csv(rpm_df,
"C:/Users/ginge/Documents/NatCap/GIS_local/Kenya/RPM_via_NDVI_OPC/fitted_through_2015/RPM_outputs_transect_locations_and_dates.csv",
row.names=FALSE)
# compare animal density from dung with density estimated by RPM
emp_grazers_per_ha <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Forage_model/Kenya_ticks_project_specific/OPC_dung_analysis/grazer_AUE_per_ha.csv")
rpm_df <- read.csv("C:/Users/ginge/Documents/NatCap/GIS_local/Kenya/RPM_via_NDVI_OPC/fitted_through_2015/RPM_outputs_transect_locations_and_dates.csv")
animal_df <- merge(emp_grazers_per_ha, rpm_df)
head(animal_df)
p <- ggplot(animal_df, aes(x=animal_density, y=grazer_AUE_per_ha))
p <- p + geom_point(aes(color=year_month))
print(p)
animal_df <- merge(emp_grazers_per_ha, rpm_df)
p <- ggplot(animal_df, aes(x=animal_density, y=grazer_AUE_per_ha))
p <- p + geom_point() + facet_wrap(~year_month, scales='free')
print(p)
?abline
p <- ggplot(animal_df, aes(x=animal_density, y=grazer_AUE_per_ha))
p <- p + geom_point() + geom_abline(intercept=0, slope=1, linetype=3)
p <- p + facet_wrap(~year_month, scales='free')
print(p)
p <- p + facet_wrap(~year_month, scales='free') + xlab('Density from RPM') + ylab('Density from dung')
print(p)
p <- ggplot(animal_df, aes(x=animal_density, y=grazer_AUE_per_ha))
p <- p + geom_point() + geom_abline(intercept=0, slope=1, linetype=3)
p <- p + xlab('Density from RPM') + ylab('Density from dung') # + facet_wrap(~year_month, scales='free')
print(p)
pearson_cor <- cor.test(animal_df$animal_density, animal_df$grazer_AUE_per_ha, method='pearson')
?cor.test
pearson_cor[['estimate']]
pearson_cor[['p.value']]
# compare animal density from RPM with bovid dung only
comb_df <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Forage_model/Kenya_ticks_project_specific/OPC_dung_analysis/dung_summary.csv")
colnames(comb_df)
# compare animal density from RPM with bovid dung only
comb_df <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Forage_model/Kenya_ticks_project_specific/OPC_dung_analysis/dung_summary.csv")
bovid_df <- comb_df[, c('transect', 'bovid')]
bovid_rpm_df <- merge(bovid_df, rpm_df)
p <- ggplot(bovid_rpm_df, aes(x=animal_density, y=bovid))
p <- p + geom_point() + geom_abline(intercept=0, slope=1, linetype=3)
bovid_rpm_df <- merge(bovid_df, rpm_df)
p <- ggplot(bovid_rpm_df, aes(x=animal_density, y=bovid))
p <- p + geom_point() + xlab('Density from RPM') + ylab('Bovid dung count')
print(p)
pearson_cor <- cor.test(bovid_rpm_df$animal_density, animal_df$bovid, method='pearson')
pearson_cor[['estimate']]
pearson_cor <- cor.test(bovid_rpm_df$animal_density, bovid_rpm_df$bovid, method='pearson')
pearson_cor[['estimate']]
pearson_cor[['p.value']]
pearson_cor <- cor.test(bovid_rpm_df$animal_density, bovid_rpm_df$bovid, method='spearman')
pearson_cor[['estimate']]
pearson_cor[['p.value']]
# compare animal density from dung with density estimated by RPM
fig_dir <- "C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Forage_model/model_results/OPC_RPM"
p <- ggplot(animal_df, aes(x=animal_density, y=grazer_AUE_per_ha))
p <- p + geom_point() + geom_abline(intercept=0, slope=1, linetype=3)
p <- p + xlab('Density from RPM') + ylab('Density from dung') # + facet_wrap(~year_month, scales='free')
print(p)
pngname <- paste(fig_dir, "RPM_density_vs_AUE_density_from_dung.png", sep="/")
png(file=pngname, units="in", res=300, width=5, height=5)
print(p)
dev.off()
p <- ggplot(bovid_rpm_df, aes(x=animal_density, y=bovid))
p <- p + geom_point() + xlab('Density from RPM') + ylab('Bovid dung count')
print(p)
pngname <- paste(fig_dir, "RPM_density_vs_bovid_dung_count.png", sep="/")
png(file=pngname, units="in", res=300, width=5, height=5)
print(p)
dev.off()
pearson_cor <- cor.test(animal_df$animal_density, animal_df$grazer_AUE_per_ha, method='pearson')
pearson_cor[['estimate']]
pearson_cor[['p.value']]
pearson_cor <- cor.test(bovid_rpm_df$animal_density, bovid_rpm_df$bovid, method='pearson')
pearson_cor[['estimate']]
pearson_cor[['p.value']]
# package up data for submission to PLOS ONE
PDM_summary <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Data/Kenya/From_Sharon/Processed_by_Ginger/OPC_PDM_summary.csv")
head(PDM_summary)
# compare standing biomass from RPM to transect biomass
PDM_summary <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Data/Kenya/From_Sharon/Processed_by_Ginger/OPC_PDM_summary.csv")
rpm_df <- read.csv("C:/Users/ginge/Documents/NatCap/GIS_local/Kenya/RPM_via_NDVI_OPC/fitted_through_2015/RPM_outputs_transect_locations_and_dates.csv")
biomass_df <- merge(PDM_summary, rpm_df)
library(ggplot2)
colnames(biomass_df)
p <- ggplot(biomass_df, aes(x=standing_biomass, y=biomass_kgha))
p <- p + geom_point()
print(p)
p <- p + geom_point() + xlab("Standing biomass (RPM)") + ylab("Empirical biomass")
print(p)
# compare standing biomass from RPM to transect biomass
fig_dir <- "C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Forage_model/model_results/OPC_RPM"
pngname <- paste(fig_dir, "RPM_biomass_vs_transect_biomass.png", sep="/")
png(file=pngname, units="in", res=300, width=5, height=5)
print(p)
dev.off()
df <- read.csv("E:/GIS_local_archive/Kenya_ticks/Kenya_forage/OPC_transect_RPM_date.csv")
colnames(df)
# RPM outputs at transect locations
rpm_full_df <- read.csv("C:/Users/ginge/Documents/NatCap/GIS_local/Kenya/RPM_via_NDVI_OPC/fitted_through_2015/RPM_outputs_transect_locations.csv")
rpm_df_merge <- merge(rpm_full_df, transect_date_corr_df)
transect_date_corr_df <- read.csv("E:/GIS_local_archive/Kenya_ticks/Kenya_forage/OPC_transect_RPM_date.csv")
rpm_df_merge <- merge(rpm_full_df, transect_date_corr_df)
colnames(rpm_df_merge)
# compare standing biomass from RPM to transect biomass
fig_dir <- "C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Forage_model/model_results/OPC_RPM"
PDM_summary <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Data/Kenya/From_Sharon/Processed_by_Ginger/OPC_PDM_summary.csv")
# zero density
rpm_df <- read.csv("C:/Users/ginge/Documents/NatCap/GIS_local/Kenya/RPM_OPC_zero_sd/RPM_outputs_transect_locations.csv")
biomass_df <- merge(PDM_summary, rpm_df)
p <- ggplot(biomass_df, aes(x=standing_biomass, y=biomass_kgha))
library(ggplot2)
p <- ggplot(biomass_df, aes(x=standing_biomass, y=biomass_kgha))
p <- p + geom_point() + xlab("Standing biomass (RPM)") + ylab("Empirical biomass")
print(p)
model <- lm.fit(biomass_df$standing_biomass, biomass_df$biomass_kgha)
?lm
model <- lm(biomass_kgha~standing_biomass, data=biomass_df)
summary(model)
# via NDVI
rpm_df <- read.csv("C:/Users/ginge/Documents/NatCap/GIS_local/Kenya/RPM_via_NDVI_OPC/fitted_through_2015/RPM_outputs_transect_locations.csv")
biomass_df <- merge(PDM_summary, rpm_df)
model <- lm(biomass_kgha~standing_biomass, data=biomass_df)
summary(model)  # r squared: 0.02
cor <- cor.test(biomass_df$biomass_kgha, biomass_df$standing_biomass, method='pearson')
?cor.test
cor['estimate']
# via NDVI
rpm_df <- read.csv("C:/Users/ginge/Documents/NatCap/GIS_local/Kenya/RPM_via_NDVI_OPC/fitted_through_2015/RPM_outputs_transect_locations.csv")
biomass_df <- merge(PDM_summary, rpm_df)
cor <- cor.test(biomass_df$biomass_kgha, biomass_df$standing_biomass, method='pearson')
cor['estimate']  # pearson correlation: 0.04
# zero density
rpm_df <- read.csv("C:/Users/ginge/Documents/NatCap/GIS_local/Kenya/RPM_OPC_zero_sd/RPM_outputs_transect_locations.csv")
biomass_df <- merge(PDM_summary, rpm_df)
cor <- cor.test(biomass_df$biomass_kgha, biomass_df$standing_biomass, method='pearson')
cor['estimate']  # pearson correlation: 0.04
# uniform density
rpm_df <- read.csv("C:/Users/ginge/Documents/NatCap/GIS_local/Kenya/RPM_OPC_uniform_sd/RPM_outputs_transect_locations.csv")
biomass_df <- merge(PDM_summary, rpm_df)
p <- ggplot(biomass_df, aes(x=standing_biomass, y=biomass_kgha))
p <- p + geom_point() + xlab("Standing biomass (RPM)") + ylab("Empirical biomass")
print(p)
model <- lm(biomass_kgha~standing_biomass, data=biomass_df)
summary(model)  # r squared: 0.02
cor <- cor.test(biomass_df$biomass_kgha, biomass_df$standing_biomass, method='pearson')
cor['estimate']  # pearson correlation: 0.14
# compare standing biomass from RPM to transect biomass
fig_dir <- "C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Forage_model/model_results/OPC_RPM"
PDM_summary <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Data/Kenya/From_Sharon/Processed_by_Ginger/OPC_PDM_summary.csv")
# via NDVI, doubled density
rpm_df <- read.csv("C:/Users/ginge/Documents/NatCap/GIS_local/Kenya/RPM_via_NDVI_OPC/fitted_through_2015_doubled_animals/RPM_outputs_transect_locations.csv")
biomass_df <- merge(PDM_summary, rpm_df)
library(ggplot2)
p <- ggplot(biomass_df, aes(x=standing_biomass, y=biomass_kgha))
p <- p + geom_point() + xlab("Standing biomass (RPM)") + ylab("Empirical biomass")
print(p)
pngname <- paste(fig_dir, "RPM_biomass_vs_transect_biomass_via_fitted_NDVI_doubled_animals.png", sep="/")
png(file=pngname, units="in", res=300, width=5, height=5)
print(p)
dev.off()
model <- lm(biomass_kgha~standing_biomass, data=biomass_df)
summary(model)  # r squared: 0.0009
cor <- cor.test(biomass_df$biomass_kgha, biomass_df$standing_biomass, method='pearson')
cor['estimate']  # pearson correlation: 0.04
PDM_summary
PDM_summary.head
head(PDM_summary)
# uniform, doubled density
rpm_df <- read.csv("C:/Users/ginge/Documents/NatCap/GIS_local/Kenya/RPM_OPC_uniform_sd_doubled_animals/RPM_outputs_transect_locations.csv")
biomass_df <- merge(PDM_summary, rpm_df)
p <- ggplot(biomass_df, aes(x=standing_biomass, y=biomass_kgha))
p <- p + geom_point() + xlab("Standing biomass (RPM)") + ylab("Empirical biomass")
print(p)
model <- lm(biomass_kgha~standing_biomass, data=biomass_df)
summary(model)  # r squared: 0.02
cor <- cor.test(biomass_df$biomass_kgha, biomass_df$standing_biomass, method='pearson')
cor['estimate']  # pearson correlation: 0.16
# integrated test: empirical stocking density simulations compared to empirical biomass measurements
x10_comp_csv <- "C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Forage_model/Verification_calculations/OPC_integrated_test/empirical_stocking_density/comparison_x10_OPC_veg_9.30.16_by_weather.csv"
x10df <- read.csv(x10_comp_csv)
grz_months <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Forage_model/Verification_calculations/OPC_integrated_test/empirical_stocking_density/grazing_months.csv")
# simulated biomass with empirical densities, by property
comp_df <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Forage_model/model_results/regional_scenarios/biomass_comparison.csv")
comp_df$diff <- comp_df$biomass_emp_densities - comp_df$biomass_back_calc
library(ggplot2)
p <- ggplot(comp_df, aes(x=site, y=diff))
p <- p + geom_point()
p <- p + facet_wrap(~density_multiplier)
print(p)
# merge with empirical biomass
emp_df <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Data/Kenya/From_Sharon/Processed_by_Ginger/regional_PDM_summary.csv")
emp_df <- emp_df[emp_df$Year == 2015, c("FID", "Property", "mean_biomass_gm2")]
plot_df <- merge(emp_df, comp_df, by.x="FID", by.y="site")
p <- ggplot(plot_df, aes(x=mean_biomass_gm2, y=biomass_emp_densities))
p <- p + facet_wrap(~density_multiplier)
p <- p + geom_point()
print(p) # wow
p <- p + geom_abline(slope=1, intercept=0)
print(p) # wow
PDM_summary <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Data/Kenya/From_Sharon/Processed_by_Ginger/OPC_PDM_summary.csv")
# compare standing biomass from RPM to transect biomass
fig_dir <- "C:/Users/ginge/Dropbox/NatCap_backup/Forage_model/Forage_model/model_results/OPC_RPM"
# uniform, doubled density
rpm_df <- read.csv("C:/Users/ginge/Documents/NatCap/GIS_local/Kenya/RPM_OPC_uniform_sd_doubled_animals/RPM_outputs_transect_locations.csv")
biomass_df <- merge(PDM_summary, rpm_df)
p <- ggplot(biomass_df, aes(x=standing_biomass, y=biomass_kgha))
p <- p + geom_point() + xlab("Standing biomass (RPM)") + ylab("Empirical biomass")
print(p)
pngname <- paste(fig_dir, "RPM_biomass_vs_transect_biomass_uniform_doubled_density.png", sep="/")
png(file=pngname, units="in", res=300, width=5, height=5)
print(p)
dev.off()
fig_dir
# via NDVI, doubled density
rpm_df <- read.csv("C:/Users/ginge/Documents/NatCap/GIS_local/Kenya/RPM_via_NDVI_OPC/fitted_through_2015_doubled_animals/RPM_outputs_transect_locations.csv")
# summarize farm size distribution in watersheds
ws_full_df <- read.csv("G:/Shared drives/Moore Amazon Hydro/1_base_data/Other/watershed_characteristics/watershed_characteristics_combined.csv")
size_intersect_df <- read.csv("C:/Users/ginge/Desktop/Farm_size_Samberg_etal_2016/watershed_farm_size_intersect.csv")
colnames(ws_full_df)
?read.csv()
# summarize farm size distribution in watersheds
ws_full_df <- read.csv("G:/Shared drives/Moore Amazon Hydro/1_base_data/Other/watershed_characteristics/watershed_characteristics_combined.csv",
sep=';')
head(ws_full_df)
ws_full_df <- ws_full_df[, c('fid', 'area_ha')]
?aggregate
colnames(size_intersect_df)
total_area_intersect <- aggregate(area_ha~fid, FUN=sum)
total_area_intersect <- aggregate(area_ha~fid, data=size_intersect_df, FUN=sum)
colnames(total_area_intersect)
colnames(total_area_intersect) <- c('fid', 'total_area_intersect')
area_merge <- merge(ws_full_df, total_area_intersect)
area_merge$perc_area_in_size_dataset <- area_merge$total_area_intersect / area_merge$area_ha
hist(area_merge$perc_area_in_size_dataset, breaks=50)
summary(area_merge$perc_area_in_size_dataset)
unique(size_intersect_df$Jun7_cat)
size_intersect_df$fid_category <- paste(size_intersect_df$fid, size_intersect_df$Jun7_cat, sep='_')
View(size_intersect_df)
colnames(size_intersect_df)
sum_area_by_size <- aggregate(area_ha~fid_category, data=size_intersect_df, FUN=sum)
View(sum_area_by_size)
sum_area_by_size <- aggregate(area_ha~fid + Jun7_cat, data=size_intersect_df, FUN=sum)
sum_area_by_size1 <- aggregate(area_ha~fid + Jun7_cat, data=size_intersect_df, FUN=sum)
sum_area_by_size2 <- aggregate(area_ha~fid_category, data=size_intersect_df, FUN=sum)
area_merge <- merge(area_merge, sum_area_by_size)
?merge
colnames(area_merge)
colnames(sum_area_by_size)
area_merge <- merge(ws_full_df, total_area_intersect)
area_merge$perc_area_in_size_dataset <- area_merge$total_area_intersect / area_merge$area_ha
colnames(area_merge)
area_merge <- area_merge[, c('fid', 'total_area_intersect', 'perc_area_in_size_dataset')]
sum_area_by_size <- aggregate(area_ha~fid + Jun7_cat, data=size_intersect_df, FUN=sum)
colnames(sum_area_by_size) <- c('fid', 'area_ha_size_category')
area_merge <- merge(area_merge, sum_area_by_size, all=TRUE)
View(area_merge)
sum_area_by_size <- aggregate(area_ha~fid + Jun7_cat, data=size_intersect_df, FUN=sum)
colnames(sum_area_by_size)
colnames(sum_area_by_size) <- c('fid', 'Jun7_cat', 'area_ha_size_category')
area_merge <- merge(area_merge, sum_area_by_size, all=TRUE)
area_merge$perc_area_in_size_dataset <- area_merge$total_area_intersect / area_merge$area_ha
area_merge <- area_merge[, c('fid', 'total_area_intersect', 'perc_area_in_size_dataset')]
area_merge <- merge(area_merge, sum_area_by_size, all=TRUE)
area_merge$perc_area_size_category <- area_merge$area_ha_size_category / area_merge$total_area_intersect
View(area_merge)
# summarize farm size distribution in watersheds
ws_full_df <- read.csv("G:/Shared drives/Moore Amazon Hydro/1_base_data/Other/watershed_characteristics/watershed_characteristics_combined.csv",
sep=';')
ws_full_df <- ws_full_df[, c('fid', 'area_ha')]
size_intersect_df <- read.csv("C:/Users/ginge/Desktop/Farm_size_Samberg_etal_2016/watershed_farm_size_intersect.csv")
total_area_intersect <- aggregate(area_ha~fid, data=size_intersect_df, FUN=sum)
colnames(total_area_intersect) <- c('fid', 'total_area_intersect')
area_merge <- merge(ws_full_df, total_area_intersect)
area_merge$perc_area_in_size_dataset <- area_merge$total_area_intersect / area_merge$area_ha
area_merge <- area_merge[, c('fid', 'total_area_intersect', 'perc_area_in_size_dataset')]
sum_area_by_size <- aggregate(area_ha~fid + Jun7_cat, data=size_intersect_df, FUN=sum)
colnames(sum_area_by_size) <- c('fid', 'Jun7_cat', 'area_ha_size_category')
area_merge <- merge(area_merge, sum_area_by_size, all=TRUE)
area_merge$perc_area_size_category <- area_merge$area_ha_size_category / area_merge$total_area_intersect
colnames(area_merge)
long_df <- area_merge[, c('fid', 'Jun7_cat', 'perc_area_size_category')]
?reshape
wide_df <- reshape(long_df, idvar='fid', timevar='Jun7_cat', v.names='perc_area_size_category', direction='wide')
View(wide_df)
atest <- colSums(wide_df)
atest <- rowSums(wide_df)
?rowSums
atest <- rowSums(wide_df, na.rm=TRUE)
atest
atest <- rowSums(wide_df[, 2:6], na.rm=TRUE)
atest
total_area_df <- area_merge[, c('fid', 'total_area_intersect')]
View(total_area_df)
# summarize farm size distribution in watersheds
ws_full_df <- read.csv("G:/Shared drives/Moore Amazon Hydro/1_base_data/Other/watershed_characteristics/watershed_characteristics_combined.csv",
sep=';')
ws_full_df <- ws_full_df[, c('fid', 'area_ha')]
size_intersect_df <- read.csv("C:/Users/ginge/Desktop/Farm_size_Samberg_etal_2016/watershed_farm_size_intersect.csv")
total_area_intersect <- aggregate(area_ha~fid, data=size_intersect_df, FUN=sum)
colnames(total_area_intersect) <- c('fid', 'total_area_intersect')
total_area_df <- merge(ws_full_df, total_area_intersect)
total_area_df$perc_area_in_size_dataset <- total_area_df$total_area_intersect / total_area_df$area_ha
total_area_df <- total_area_df[, c('fid', 'total_area_intersect', 'perc_area_in_size_dataset')]
sum_area_by_size <- aggregate(area_ha~fid + Jun7_cat, data=size_intersect_df, FUN=sum)
colnames(sum_area_by_size) <- c('fid', 'Jun7_cat', 'area_ha_size_category')
area_merge <- merge(total_area_df, sum_area_by_size, all=TRUE)
area_merge$perc_area_size_category <- area_merge$area_ha_size_category / area_merge$total_area_intersect
long_df <- area_merge[, c('fid', 'Jun7_cat', 'perc_area_size_category')]
wide_df <- reshape(long_df, idvar='fid', timevar='Jun7_cat', v.names='perc_area_size_category', direction='wide')
total_area_df <- total_area_df[, c('fid', 'total_area_intersect')]
summary_df <- merge(total_area_df, wide_df)
View(summary_df)
total_area_df <- merge(ws_full_df, total_area_intersect)
# summarize farm size distribution in watersheds
ws_full_df <- read.csv("G:/Shared drives/Moore Amazon Hydro/1_base_data/Other/watershed_characteristics/watershed_characteristics_combined.csv",
sep=';')
ws_full_df <- ws_full_df[, c('fid', 'area_ha')]
size_intersect_df <- read.csv("C:/Users/ginge/Desktop/Farm_size_Samberg_etal_2016/watershed_farm_size_intersect.csv")
total_area_intersect <- aggregate(area_ha~fid, data=size_intersect_df, FUN=sum)
colnames(total_area_intersect) <- c('fid', 'total_area_intersect')
total_area_df <- merge(ws_full_df, total_area_intersect)
total_area_df$perc_area_in_size_dataset <- total_area_df$total_area_intersect / total_area_df$area_ha
total_area_df <- total_area_df[, c('fid', 'total_area_intersect', 'perc_area_in_size_dataset')]
sum_area_by_size <- aggregate(area_ha~fid + Jun7_cat, data=size_intersect_df, FUN=sum)
colnames(sum_area_by_size) <- c('fid', 'Jun7_cat', 'area_ha_size_category')
area_merge <- merge(total_area_df, sum_area_by_size, all=TRUE)
area_merge$perc_area_size_category <- area_merge$area_ha_size_category / area_merge$total_area_intersect
long_df <- area_merge[, c('fid', 'Jun7_cat', 'perc_area_size_category')]
wide_df <- reshape(long_df, idvar='fid', timevar='Jun7_cat', v.names='perc_area_size_category', direction='wide')
total_area_df <- total_area_df[, c('fid', 'perc_area_in_size_dataset')]
summary_df <- merge(total_area_df, wide_df)
write.csv(summary_df, "G:/Shared drives/Moore Amazon Hydro/1_base_data/Other/watershed_characteristics/farm_size_summary.csv",
row.names=FALSE)
?fill.na
summary_df[is.na(summary_df)] <- 0
write.csv(summary_df, "G:/Shared drives/Moore Amazon Hydro/1_base_data/Other/watershed_characteristics/farm_size_summary.csv",
row.names=FALSE)
write.csv(summary_df, "G:/Shared drives/Moore Amazon Hydro/1_base_data/Other/watershed_characteristics/farm_size_summary.csv",
row.names=FALSE)
?setwd
setwd("C:/Users/ginge/Documents/Python/nci_ndr")
# surface water nitrate observations and predictors, 5 min resolution
noxn_obs_path_surface <- "~/noxn_obs_surface.csv"
atest <- read.csv(noxn_obs_path_surface)
getwd
getwd()
# surface water nitrate observations and predictors, 5 min resolution
test_path = paste(getwd(), 'noxn_obs_surface.csv', sep='/')
test <- read.csv(test_path)
## add accumulated and accumulated-normalized predictors
# surface
covar_df_path_5min <- paste(repo_dir, "/covar_df_5min_surface.csv", sep='/')
# directory containing cloned repository
repo_dir <- "C:/Users/ginge/Documents/Python/nci_ndr"
## add accumulated and accumulated-normalized predictors
# surface
covar_df_path_5min <- paste(repo_dir, "/covar_df_5min_surface.csv", sep='/')
# where results of the random forest model should be stored
results_dir <- "C:/Users/ginge/Dropbox/NatCap_backup/NCI WB/Analysis_results/Updated_NDR_5.18.20"
accum_covar_path <- "C:/Users/ginge/Dropbox/NatCap_backup/NCI WB/Aggregated_covariates/accumulated/WB_station_orig_5min_pixel/combined_covariates.csv"
local_covar <- read.csv(covar_df_path_5min)
accum_covar <- read.csv(accum_covar_path)
colnames(local_covar)
colnames(accum_covar)
covar_combined <- merge(local_covar, accum_covar)
colnames(covar_combined)
covar_combined <- merge(local_covar, accum_covar, by='OBJECTID')
View(covar_combined)
covar_combined <- merge(local_covar, accum_covar, by='OBJECTID', all=TRUE)
View(covar_combined)
?subset
local_covar <- subset(local_covar, select=-c(X))#  subset(df, select=-c(z,u))
colnames(local_covar)
accum_covar <- subset(accum_covar, select=-c(X))
colnames(accum_covar)
accum_covar <- read.csv(accum_covar_path)
colnames(accum_covar)
intersect(colnames(accum_covar), colnames(local_covar))
covar_combined <- merge(local_covar, accum_covar, by='OBJECTID')
?merge
data.class(local_covar$OBJECTID)
data.class(accum_covar$OBJECTID)
local_covar$OBJECTID <- as.numeric(local_covar$OBJECTID)
head(local_covar)
head(accum_covar)
## add accumulated and accumulated-normalized predictors
covar_df_path <- "C:/Users/ginge/Documents/Python/nci_ndr/covar_df_5min_surface.csv"
stn_covar_df <- read.csv(covar_df_path)
accum_df <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/NCI WB/Aggregated_covariates/accumulated/WB_station_orig_5min_pixel/combined_covariates.csv")
# surface stations with noxn observations
SURFACE_NOXN_STATION_CSV <- "F:/NCI_NDR/Data worldbank/station_data/WB_surface_stations_noxn_obs.csv"
STN_DF <- read.csv(SURFACE_NOXN_STATION_CSV)
colnames(STN_DF)
stn_accum_df <- merge(accum_df, STN_DF)
accum_df_objectid <- stn_accum_df[, c('GEMS.Stati', colnames(accum_df))]
View(accum_df_objectid)
colnames(accum_df)
colnames(accum_df_objectid)
accum_df_objectid <- subset(accum_df_objectid, select=-c('OBJECTID'))
accum_df_objectid <- subset(accum_df_objectid, select=-c(OBJECTID))
colnames(stn_covar_df)[1] <- 'OBJECTID'
head(stn_covar_df)
stn_covar_df <- read.csv(covar_df_path)
stn_accum_df <- merge(accum_df, STN_DF)
accum_df_objectid <- stn_accum_df[, c('GEMS.Stati', colnames(accum_df))]
accum_df_objectid <- subset(accum_df_objectid, select=-c(OBJECTID))
colnames(accum_df_objectid)[1] <- 'OBJECTID'
head(accum_df_objectid)
local_covar_df_path <- "C:/Users/ginge/Documents/Python/nci_ndr/covar_df_5min_surface.csv"
local_covar_df <- read.csv(local_covar_df_path)
combined_df <- merge(accum_df_objectid, local_covar_df)
colnames(combined_df)
View(combined_df)
write.csv(combined_df, "C:/Users/ginge/Dropbox/NatCap_backup/NCI WB/Aggregated_covariates/accumulated/WB_station_orig_5min_pixel/covar_df_combined_with_local.csv")
## add accumulated and accumulated-normalized predictors
accum_df <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/NCI WB/Aggregated_covariates/accumulated/groundwater_GEMStat_Gu_USGS_Ouedraogo/combined_covariates.csv")
head(accum_df)
# N application as predictor: covar_df <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/NCI WB/Aggregated_covariates/N_application_predictor/groundwater_GEMStat_Gu_USGS_Ouedraogo/combined_covariates.csv")
# 5 min resolution
covar_df_path <- "C:/Users/ginge/Dropbox/NatCap_backup/NCI WB/Aggregated_covariates/groundwater_GEMStat_Gu_USGS_Ouedraogo/combined_covariates.csv"
covar_df <- read.csv(covar_df_path)
head(covar_df)
##### random forests for groundwater #####
GROUNDWATER_PREDICTORS <- c(
'OBJECTID', 'n_export', 'precip_variability',
'population', 'depth_to_groundwater', 'cattle',
'average_flow', 'percent_no_sanitation', 'clay_percent',
'flash_flow', 'sand_percent', 'pigs', 'proportion_urban')
covar_df <- covar_df[, GROUNDWATER_PREDICTORS]
combined_df <- merge(accum_df, covar_df)
# N application as predictor: covar_df <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/NCI WB/Aggregated_covariates/N_application_predictor/groundwater_GEMStat_Gu_USGS_Ouedraogo/combined_covariates.csv")
# 5 min resolution
covar_df_path <- "C:/Users/ginge/Dropbox/NatCap_backup/NCI WB/Aggregated_covariates/groundwater_GEMStat_Gu_USGS_Ouedraogo/combined_covariates.csv"
covar_df <- read.csv(covar_df_path)
covar_df <- covar_df[, GROUNDWATER_PREDICTORS]
## add accumulated and accumulated-normalized predictors
accum_df <- read.csv("C:/Users/ginge/Dropbox/NatCap_backup/NCI WB/Aggregated_covariates/accumulated/groundwater_GEMStat_Gu_USGS_Ouedraogo/combined_covariates.csv")
combined_df <- merge(accum_df, covar_df)
colnames(covar_df)
colnames(accum_df)
write.csv(combined_df, "C:/Users/ginge/Dropbox/NatCap_backup/NCI WB/Aggregated_covariates/accumulated/groundwater_GEMStat_Gu_USGS_Ouedraogo/covar_df_combined_with_local.csv")
